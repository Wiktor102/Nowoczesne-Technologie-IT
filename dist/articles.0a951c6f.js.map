{"version":3,"sources":["../node_modules/regenerator-runtime/runtime.js","js/comments.js","js/urlParmas.js","js/getArticlesHtml.js","js/articles.js"],"names":["get_comments_html","id","comments","html","get_comments","length","forEach","user","date","text","console","error","Promise","resolve","reject","$","ajax","url","method","data","articleID","dataType","done","resp","fail","err","saveComment","article_id","commentData","comment","msg","displayNewComment","articleId","prependTo","remove","on","parent","hide","slideUp","delay","slideDown","fadeIn","username","val","click","alert","params","URLSearchParams","window","location","search","getUrlParam","key","ifDelete","param","get","deleteUrlParam","setUrlParam","value","set","refreshUrlParam","delete","newUrl","origin","pathname","toString","history","pushState","path","getArticleContentHtml","content","sources","introductionText","has_intro","v","type","blockquote","list","image","header","getTextHtml","toReturn","source","URL","host","listItems","listType","showSource","get_articles_list","display_articles_list","i","a","JSON","parse","title","img","append","show_article","article","is_loaded","show","scroll","get_article","Error","showTitleImgSource","titleImgPath","each","post","is","css","scrollY"],"mappings":"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","file":"articles.0a951c6f.js","sourceRoot":"..\\src","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","//funkcje ładujące i pokazujące komentarze\r\nconst get_comments_html = async (id, comments = null) => {\r\n    let html = \"\";\r\n\r\n    try {\r\n\r\n        if (comments == null) {\r\n            comments = await get_comments(id);\r\n\r\n            if (comments.length <= 0) {\r\n                return '<p class=\"empty\">Brak komentarzy</p>';\r\n            }\r\n        }\r\n\r\n        comments.forEach(({ user, date, text }) => {\r\n            html += `\r\n                <div class=\"comment\">\r\n                    <header class=\"comment__header\">\r\n                        <div class=\"comment__username\">${user}</div>\r\n                        <div class=\"comment__date\">${date}</div>\r\n                    </header>\r\n                    <div class=\"comment__content\">${text}</div>\r\n                </div>\r\n            `;\r\n        });\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n\r\n    return html;\r\n}\r\n\r\nconst get_comments = id => {\r\n    return new Promise((resolve, reject) => {\r\n        $.ajax({ url: \"get_comments.php\", method: \"POST\", data: { articleID: id }, dataType: \"json\" })\r\n            .done(resp => { resolve(resp) })\r\n            .fail(err => { reject(err) });\r\n    });\r\n}\r\n\r\nconst saveComment = (article_id, commentData) => {\r\n    return new Promise((resolve, reject) => {\r\n        $.ajax({ url: \"save_comment.php\", method: \"POST\", data: { articleID: article_id, comment: commentData }, dataType: \"json\" })\r\n            .done(resp => { if (resp.msg !== \"\") { reject(resp) } resolve(resp) })\r\n            .fail(err => { reject(err) });\r\n    });\r\n}\r\n\r\nconst displayNewComment = async (commentData, articleId) => {\r\n    $(await get_comments_html(null, [commentData])).prependTo(`.comments[data-id=${articleId}] .comments__container`);\r\n    $(`.comments[data-id=${articleId}] .comments__container > p.empty`).remove();\r\n}\r\n\r\n//eventy\r\n$('body').on(\"click\", '.comments__add_comment', function () {\r\n    const id = $(this).parent().data(\"id\");\r\n    $(`.comments[data-id=${id}] > .comments__add_comment`).hide();\r\n    $(`.comments[data-id=${id}] > .comments__container`).slideUp(500);\r\n    $(`.comments[data-id=${id}] > .form`).delay(450).slideDown(500);\r\n    $(`.comments[data-id=${id}] > .back.to_comments`).delay(500).fadeIn(0);\r\n});\r\n\r\n$('body').on(\"click\", 'article .back.to_comments', function () {\r\n    const id = $(this).parent().data(\"id\");\r\n    $(`.comments[data-id=${id}] > .back.to_comments`).hide();\r\n    $(`.comments[data-id=${id}] > .form`).slideUp(500);\r\n    $(`.comments[data-id=${id}] > .comments__container`).delay(500).slideDown(500);\r\n    $(`.comments[data-id=${id}] > .comments__add_comment`).delay(500).fadeIn(0);\r\n});\r\n\r\n$('body').on(\"click\", '.comment__publish', async function () {\r\n    const articleId = $(this).parent().parent().data(\"id\");\r\n\r\n    //pobieranie komentarza z formularza\r\n    const username = $(`.comments[data-id=${articleId}] .form .comment__username`).val();\r\n    const text = $(`.comments[data-id=${articleId}] .form .comment__text`).val();\r\n    const comment = {\r\n        user: username,\r\n        text: text\r\n    };\r\n\r\n    //zapisywanie komentarza w bazie danych\r\n    try {\r\n        const resp = await saveComment(articleId, comment);\r\n        displayNewComment(resp, articleId); //Wyświetlanie nowo dodanego komentarza\r\n        $(`article[data-id=${articleId}] .back.to_comments`).click();\r\n\r\n    } catch (e) {\r\n        console.error(e);\r\n        alert(\"Wystąpił Błąd!\" + e.msg); //tymczasowo\r\n    }\r\n});\r\n\r\nexport { get_comments_html };\r\n\r\n//© Wiktor Golicz 2021 - WSZELKIE PRAWA ZASTRZEŻONE","let params = new URLSearchParams(window.location.search);\r\n\r\nconst getUrlParam = (key, ifDelete = false) => {\r\n    const param = params.get(key);\r\n\r\n    if (ifDelete) {\r\n        deleteUrlParam(key);\r\n    }\r\n\r\n    return param;\r\n}\r\n\r\nconst setUrlParam = (key, value) => {\r\n    params.set(key, value);\r\n    refreshUrlParam();\r\n}\r\n\r\nconst deleteUrlParam = key => {\r\n    params.delete(key);\r\n    refreshUrlParam();\r\n}\r\n\r\nconst refreshUrlParam = () => {\r\n    const newUrl = `${window.location.origin}${window.location.pathname}?${params.toString()}`;\r\n    window.history.pushState({path:newUrl}, \"\", newUrl);\r\n}\r\n\r\nif (getUrlParam(\"a\") == null) {\r\n    setUrlParam(\"a\", 0)\r\n}\r\n\r\nexport {setUrlParam, getUrlParam, deleteUrlParam, refreshUrlParam};\r\n\r\n//© Wiktor Golicz 2021 - WSZELKIE PRAWA ZASTRZEŻONE","const getArticleContentHtml = ({content, sources, introductionText}) => {\r\n    let text = \"\";\r\n    let has_intro = false;\r\n\r\n    content.forEach((v) => {\r\n\r\n        if (v.type == \"video\") {\r\n            text += `<div class=\"video_container\">${v.content}</div>`;\r\n            return true;\r\n        }\r\n\r\n        if (v.type == \"intro\") {\r\n            text += `<h5>${v.text}</h5>`;\r\n            has_intro = true;\r\n            return true;\r\n        }\r\n\r\n        if (v.type == \"blockquote\") {\r\n            text += blockquote(v);\r\n            return true;\r\n        }\r\n\r\n        if (v.type == \"list\") {\r\n            text += list(v);\r\n            return true;\r\n        }\r\n\r\n        if (v.type == \"image\") {\r\n            text += image(v);\r\n            return true;\r\n        }\r\n\r\n        text += `<h2>${v.header || \"\"}</h2>`;\r\n\r\n        if (typeof v.text == \"object\") {\r\n            text += getTextHtml(v.text);\r\n            return true;\r\n        }\r\n\r\n        text += `<p>${v.text}</p>`;\r\n    });\r\n\r\n    if (sources) {\r\n        text += '<div class=\"sources\"><span>Źródła informacji i inspiracje:</span>';\r\n        sources.forEach((v) => {\r\n            text += `<span class=\"source\"><a href=\"${v[1]}\" target=\"_blank\">${v[0]}</a></span>`;\r\n        });\r\n        text += `</div>`;\r\n    }\r\n\r\n    if (!has_intro) {\r\n        text = `<h5>${introductionText}</h5>` + text;\r\n    }\r\n\r\n    return text;\r\n}\r\n\r\nconst getTextHtml = content => {\r\n    let toReturn = \"\";\r\n\r\n    content.forEach((data) => {\r\n\r\n        if (typeof data == \"object\") {\r\n\r\n            if (data.type == \"blockquote\") {\r\n                toReturn += blockquote(data);\r\n                return true;\r\n            }\r\n\r\n            if (data.type == \"list\") {\r\n                toReturn += list(data);\r\n                return true;\r\n            }\r\n\r\n            if (data.type == \"image\") {\r\n                toReturn += image(data);\r\n                return true;\r\n            }\r\n\r\n            toReturn += `<h3>${data.header || \"\"}</h3><p>${data.text || data.content || \"\"}</p>`;\r\n            return true;\r\n        }\r\n\r\n        toReturn += `<p>${data}</p>`;\r\n    });\r\n\r\n    return toReturn;\r\n}\r\n\r\nconst blockquote = data => {\r\n    return `\r\n    <blockquote cite=\"${data.source || \"\"}\">\r\n        <div>${data.text}</div>\r\n        <div class=\"cite_src\">${new URL(data.source).host}</div>\r\n    </blockquote>`;\r\n}\r\n\r\nconst list = data => {\r\n    let listItems = \"\";\r\n\r\n    data.content.forEach(v => {\r\n        listItems += `<li>${v}</li>`;\r\n    });\r\n\r\n    if (data.listType == \"unordered\" || !data.listType) {\r\n        return `<ul>${listItems}</ul>`;\r\n    }\r\n\r\n    return `<ol>${listItems}</ol>`;\r\n}\r\n\r\nconst image = data => {\r\n    return `\r\n    <div data-showSource=\"${data.showSource}\" data-ImgSource=\"${new URL(data.source).host}\" class=\"image\">\r\n        <img src=\"${data.source}\"/>\r\n    </div>`;\r\n}\r\n\r\nexport default getArticleContentHtml;\r\n\r\n//© Wiktor Golicz 2021 - WSZELKIE PRAWA ZASTRZEŻONE","import 'regenerator-runtime/runtime'; //Trzeba to zaimportować żeby async/await działało w starszych przeglądarkach\r\nimport {get_comments_html} from './comments';\r\nimport {setUrlParam, getUrlParam} from './urlParmas';\r\nimport getArticleContentHtml from './getArticlesHtml';\r\n\r\n//funkcje ładujące listę artykułów\r\nconst get_articles_list = () => {\r\n    return new Promise((resolve, reject) => {\r\n        $.ajax({url: \"get_articles.php\", dataType: \"JSON\"})\r\n        .done((data) => resolve(data))\r\n        .fail((err) => reject(err));\r\n    });\r\n}\r\n\r\nconst display_articles_list = async () => {\r\n\r\n    try {\r\n        const articles_list = await get_articles_list();\r\n\r\n        articles_list.forEach((v, i, a) => {\r\n            v.data = JSON.parse(v.data);\r\n            const {id, data: [title, img, text]} = v;\r\n\r\n            $('.articles__list').append(`\r\n                <section class=\"article\" data-id=\"${id}\">\r\n                    <div>\r\n                        <h2>${title}</h2>\r\n                        <p class=\"article__text_preview\">${text}</p>\r\n                    </div>\r\n                    <img src=\"${img}\" alt=\"obrazek :-(\"/>\r\n                </section>\r\n            `);\r\n        });\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n\r\n}\r\n\r\n\r\n//funkcje ładujące i pokazujące artykuł\r\nconst show_article = async (id) => {\r\n\r\n    if (id == \"undefined\" || id == 0) {return;}\r\n\r\n    const article = is_loaded(id);\r\n\r\n    if (article) {\r\n        $('#main').hide();\r\n        $(article).show();\r\n        window.scroll(0, 0);\r\n        return;\r\n    }\r\n\r\n    try {\r\n        const {msg, id: article_id, date, data,} = await get_article(id);\r\n\r\n        if (msg) {\r\n            throw new Error(msg);\r\n        }\r\n\r\n        const {showTitleImgSource = false, ...article} = JSON.parse(data);\r\n\r\n        const html = `\r\n        <article data-id=\"${article_id}\">\r\n            <div class=\"back to_articles\"><i class=\"fas fa-arrow-left\"></i></div>\r\n            <h1>${article.title}</h1>\r\n            <div class=\"date\">${date}</div>\r\n            <hr/>\r\n            <div data-showSource=\"${showTitleImgSource}\" data-ImgSource=\"${new URL(article.titleImgPath).host}\" class=\"image image--title\">\r\n                <img src=\"${article.titleImgPath}\" alt=\"${article.title}\"/>\r\n            </div>\r\n\r\n            <div>${getArticleContentHtml(article)}</div>\r\n\r\n            <h3 class=\"comments__header\">\r\n                <span>Komentarze</span>\r\n            </h3>\r\n            <section class=\"comments\" data-id=\"${article_id}\">\r\n                <span class=\"back to_comments\"  style=\"display: none;\"><i class=\"fas fa-arrow-left\"></i></span>\r\n                <button class=\"comments__add_comment\"><i class=\"fas fa-plus\"></i> Dodaj komentarz</button>\r\n\r\n                <div class=\"comments__container\">${await get_comments_html(article_id)}</div>\r\n\r\n                <div class=\"form\" style=\"display: none;\">\r\n                    <label title=\"Ta nazwa będzie widoczna dla wszystkich użytkowników\">Nazwa użytkownika <input type=\"text\" class=\"comment__username\" autocomplete=\"off\"/></label>\r\n                    <label>Komentarz <textarea class=\"comment__text\"></textarea></label>\r\n                    <button class=\"comment__publish\"><i class=\"fas fa-plus\"></i> Opublikuj komentarz</button>\r\n                </div>\r\n            </section>\r\n\r\n        </article>`;\r\n\r\n        $(html).prependTo('#articles_container').data(\"id\", article_id);\r\n        $('#main').hide();\r\n        window.scroll(0, 0);\r\n\r\n        if (getUrlParam(\"a\") != article_id) {\r\n            setUrlParam(\"a\", article_id);\r\n        }\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n}\r\n\r\nconst is_loaded = id => {\r\n    let article = null;\r\n\r\n    $('#articles_container > article').each(function () {\r\n        if ($(this).data(\"id\") == id) {\r\n            article = this;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return article;\r\n}\r\n\r\nconst get_article = (id) => {\r\n    return new Promise((resolve, reject) => {\r\n        $.post({url: \"get_article.php\", dataType: \"JSON\", data: {id: id}})\r\n        .done((data) => {resolve(data);})\r\n        .fail((err) => {reject(err);});\r\n    });\r\n}\r\n\r\n$('body').on(\"click\", '.articles__list > .article', function () {show_article($(this).data(\"id\"))});\r\n$('body').on(\"click\", 'article .back.to_articles', function () {$('#articles_container > article').hide(); $('#main').show(); setUrlParam(\"a\", 0)});\r\n$('body').on(\"click\", 'article .redirect', function () {show_article($(this).data(\"articleid\"));});\r\n\r\n//Przycisk przewijający stronę do góry\r\n$('.to_top').click(() => {window.scroll(0, 0);});\r\n$(window).scroll(() => {\r\n\r\n    if ($('#nav__checkbox').is(\":checked\")) {$('.to_top').css(\"opacity\", 0); return;}\r\n    if (window.scrollY >= 220) {\r\n        $('.to_top').css(\"opacity\", 1);\r\n    } else {\r\n        $('.to_top').css(\"opacity\", 0);\r\n    }\r\n});\r\n\r\ndisplay_articles_list();\r\nshow_article(getUrlParam(\"a\"));\r\n\r\n//© Wiktor Golicz 2021 - WSZELKIE PRAWA ZASTRZEŻONE"]}